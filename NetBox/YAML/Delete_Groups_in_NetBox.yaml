update_pre_post_run_tasks: false
tasks:
- name: Delete Groups in NetBox
  uniquetaskname: nb.group.netbox.site.remove
  description: Delete Groups in NetBox (Site)
  provider_identifier: providers.core.neops.io/generic-netbox-jinja-facts:1
  task_kwargs:
    mapping:
      add_facts_to: GROUP
      mapping_template: "{% if response.get(group.id, false) %}\n  {# site was deleted\
        \ #}\n  {% do neops.set_facts({}) %}\n{% else %}\n  {# site was not deleted\
        \ #}\n  {% do neops.set_facts(group.facts.get(\"netbox\", {})) %}\n{% endif\
        \ %}"
    facts_key: netbox
    run_netbox_on: GLOBAL
    execute_template: "{#% set device_groups = neops.search_device_groups(\"*\") %#}\n\
      \n{# set some initial variables #}\n{% set facts = {} %}\n{% set endpoint =\
      \ \"dcim/sites/\" %}\n\n{% for group in device_groups %}\n  {% if group.facts.get(\"\
      netbox\") %}\n  \t{# remove group in netbox #}\n    -- Delete group: {{ group.name\
      \ }}    \n    {% set response = netbox.delete(endpoint ~ group.facts.netbox.get(\"\
      id\")) %}\n    {% do facts.update({group.id: response}) %}\n  {% else %}\n \
      \ \t{# no ref to netbox site in facts #}\n    -- No NetBox Site mapped to group:\
      \ {{ group.name }}\n  {% endif %}\n{% endfor %}\n\n{% do neops.set_facts(facts)\
      \ %}"
    write_on_dry_run: true
  task_run_input_schema: {}
  task_run_filter: ''
  pre_run: []
  post_run: []

update_pre_post_run_tasks: false
tasks:
- name: WIP Add Update Devices in NetBox
  uniquetaskname: nb.device.netbox.device.add
  description: Add/Update Devices in NetBox
  provider_identifier: providers.core.neops.io/generic-netbox-jinja-facts:1
  task_kwargs:
    mapping:
      add_facts_to: DEVICE
      mapping_template: '{% set facts = response.get(device.id, {}) %}

        {% do neops.set_facts(facts) %}'
    facts_key: netbox
    run_netbox_on: GLOBAL
    execute_template: "{#% set devices = neops.search_devices(\"*\") %#}\n\n{# set\
      \ some initial variables #}\n{% set facts = {} %}\n{% set device_types = neops.get_common_facts(\"\
      netbox_device_types\") %}\n{% set endpoint = \"dcim/devices/\" %}\n\n{% for\
      \ device in devices %}\n\t{% set device_type = device_types | jmespath(\"[?part_number=='\"\
      \ ~ device.model ~ \"']|[0]\") %}\n  {% set device_type = device_types | jmespath(\"\
      [?part_number=='\" ~ device.model ~ \"-L3']|[0]\") %}\n  {# how to handle the\
      \ IOSv devices #}\n  {# how to handle if device_type not found #}\n  {# add\
      \ device role, serial, platform, site, interfaces, ip, primary_ip4 #}\n  \n\t\
      {% set body = {\"name\": device.hostname, \"status\": \"active\"} %}\n  {% if\
      \ not device.facts.get(\"netbox\") %}\n  \t{# add device in netbox #}\n    --\
      \ Add device: {{ device.hostname }}\n    {% set response = netbox.post(endpoint,\
      \ body) %}\n    {% do facts.update({device.id: response}) %}\n  {% else %}\n\
      \  \t{# update device in netbox #}\n    -- Update device: {{ device.hostname\
      \ }}\n    {% set response = netbox.patch(endpoint ~ device.facts.netbox.get(\"\
      id\"), body) %}\n    {% do facts.update({device.id: response}) %}\n  {% endif\
      \ %}\n{% endfor %}\n\n{% do neops.set_facts(facts) %}"
    write_on_dry_run: true
  task_run_input_schema: {}
  task_run_filter: ''
  pre_run: []
  post_run: []
